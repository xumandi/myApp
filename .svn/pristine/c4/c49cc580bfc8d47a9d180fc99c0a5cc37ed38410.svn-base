<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>myApp</display-name>
	<!--
		web.xml 的加载顺序是：[context-param -> listener -> filter -> servlet ->
		spring] ，而同类型节点之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的。
	-->
		<!-- log config loading -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:resources/spring/bprs*.xml</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/resources/log4j/log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<!-- spring context init -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
<!-- 	<context-param> -->
<!-- 		<param-name>contextConfigLocation</param-name> -->
<!-- 		<param-value> -->
<!-- 			classpath:resources/spring/applicationContext*.xml, -->
<!-- 		</param-value> -->
<!-- 	</context-param> -->
	
	<!-- 加载全局配置文件、字典数据的监听器 -->
	<listener>
		<listener-class>com.yyy.project.listener.impl.MyServletContextListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>InitServerContext</servlet-name>
		<servlet-class>com.yyy.project.servlet.ToftContext</servlet-class>
		<init-param>
			<param-name>serversInit</param-name>
			<param-value>
				com.yyy.project.servlet.initserver.impl.SysParamterInitServerImpl
<!--				cn.net.sinodata.sinoimage.servlet.initserver.impl.HttpGetServerParam,-->
<!--				cn.net.sinodata.sinoimage.servlet.initserver.impl.WorkStartInitServerImpl,-->
<!--				cn.net.sinodata.sinoimage.moniter.InitMoniter-->
			</param-value>
		</init-param>
		<load-on-startup>10</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>InstrumentPanel</servlet-name>
		<servlet-class>com.flex.InstrumentPanel</servlet-class>
 	 </servlet>
 	 <servlet> 
         <servlet-name>DisplayChart</servlet-name> 
         <servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class> 
     </servlet> 
     <servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>
			com.yyy.dailycode.webservicecxf.init.CXFNonSpringServletImpl
		</servlet-class>
		<load-on-startup>15</load-on-startup>
	</servlet>
	<servlet-mapping>
 		<servlet-name>CXFServlet</servlet-name>
 		<url-pattern>/ws/*</url-pattern>
 	</servlet-mapping>
     <servlet-mapping> 
         <servlet-name>DisplayChart</servlet-name> 
         <url-pattern>/servlet/DisplayChart</url-pattern> 
     </servlet-mapping> 
	<servlet-mapping>
		<servlet-name>InstrumentPanel</servlet-name>
		<url-pattern>/InstrumentPanel</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>export</servlet-name>
		<servlet-class>com.test.Export</servlet-class>
		<load-on-startup>2</load-on-startup>
 	 </servlet>
	<servlet-mapping>
		<servlet-name>export</servlet-name>
		<url-pattern>/export</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>exportWord.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>index.zul</welcome-file>
	</welcome-file-list>
</web-app>
